/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

/**
 * Query parameters to be provided in the request body as a JSON object
 */
export class UploadDatasetImageFromGenRequestBody extends SpeakeasyBase {
    /**
     * The ID of the image to upload to the dataset.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "generatedImageId" })
    generatedImageId: string;
}

export class UploadDatasetImageFromGenRequest extends SpeakeasyBase {
    /**
     * Query parameters to be provided in the request body as a JSON object
     */
    @SpeakeasyMetadata({ data: "request, media_type=application/json" })
    requestBody: UploadDatasetImageFromGenRequestBody;

    /**
     * The ID of the dataset to upload the image to.
     */
    @SpeakeasyMetadata({ data: "pathParam, style=simple;explode=false;name=datasetId" })
    datasetId: string;
}

export class DatasetGenUploadOutput extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "id" })
    id?: string;
}

/**
 * Responses for POST /datasets/{datasetId}/upload/gen
 */
export class UploadDatasetImageFromGenResponseBody extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "uploadDatasetImageFromGen" })
    @Type(() => DatasetGenUploadOutput)
    uploadDatasetImageFromGen?: DatasetGenUploadOutput;
}

export class UploadDatasetImageFromGenResponse extends SpeakeasyBase {
    /**
     * HTTP response content type for this operation
     */
    @SpeakeasyMetadata()
    contentType: string;

    /**
     * HTTP response status code for this operation
     */
    @SpeakeasyMetadata()
    statusCode: number;

    /**
     * Raw HTTP response; suitable for custom response parsing
     */
    @SpeakeasyMetadata()
    rawResponse?: AxiosResponse;

    /**
     * Responses for POST /datasets/{datasetId}/upload/gen
     */
    @SpeakeasyMetadata()
    object?: UploadDatasetImageFromGenResponseBody;
}
