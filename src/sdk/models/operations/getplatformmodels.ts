/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as z from "zod";

/**
 * columns and relationships of "generated_images"
 */
export type GetPlatformModelsGeneratedImages = {
    id?: string | null | undefined;
    url?: string | undefined;
};

/**
 * columns and relationships of "custom_models"
 */
export type GetPlatformModelsCustomModels = {
    description?: string | undefined;
    featured?: boolean | undefined;
    /**
     * columns and relationships of "generated_images"
     */
    generatedImage?: GetPlatformModelsGeneratedImages | null | undefined;
    id?: string | null | undefined;
    name?: string | undefined;
    nsfw?: boolean | undefined;
};

/**
 * Responses for GET /api/rest/v1/platformModels
 */
export type GetPlatformModelsResponseBody = {
    customModels?: Array<GetPlatformModelsCustomModels> | undefined;
};

export type GetPlatformModelsResponse = {
    /**
     * HTTP response content type for this operation
     */
    contentType: string;
    /**
     * HTTP response status code for this operation
     */
    statusCode: number;
    /**
     * Raw HTTP response; suitable for custom response parsing
     */
    rawResponse: Response;
    /**
     * Responses for GET /api/rest/v1/platformModels
     */
    object?: GetPlatformModelsResponseBody | undefined;
};

/** @internal */
export namespace GetPlatformModelsGeneratedImages$ {
    export type Inbound = {
        id?: string | null | undefined;
        url?: string | undefined;
    };

    export const inboundSchema: z.ZodType<GetPlatformModelsGeneratedImages, z.ZodTypeDef, Inbound> =
        z
            .object({
                id: z.nullable(z.string()).optional(),
                url: z.string().optional(),
            })
            .transform((v) => {
                return {
                    ...(v.id === undefined ? null : { id: v.id }),
                    ...(v.url === undefined ? null : { url: v.url }),
                };
            });

    export type Outbound = {
        id?: string | null | undefined;
        url?: string | undefined;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        GetPlatformModelsGeneratedImages
    > = z
        .object({
            id: z.nullable(z.string()).optional(),
            url: z.string().optional(),
        })
        .transform((v) => {
            return {
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.url === undefined ? null : { url: v.url }),
            };
        });
}

/** @internal */
export namespace GetPlatformModelsCustomModels$ {
    export type Inbound = {
        description?: string | undefined;
        featured?: boolean | undefined;
        generated_image?: GetPlatformModelsGeneratedImages$.Inbound | null | undefined;
        id?: string | null | undefined;
        name?: string | undefined;
        nsfw?: boolean | undefined;
    };

    export const inboundSchema: z.ZodType<GetPlatformModelsCustomModels, z.ZodTypeDef, Inbound> = z
        .object({
            description: z.string().optional(),
            featured: z.boolean().optional(),
            generated_image: z
                .nullable(z.lazy(() => GetPlatformModelsGeneratedImages$.inboundSchema))
                .optional(),
            id: z.nullable(z.string()).optional(),
            name: z.string().optional(),
            nsfw: z.boolean().optional(),
        })
        .transform((v) => {
            return {
                ...(v.description === undefined ? null : { description: v.description }),
                ...(v.featured === undefined ? null : { featured: v.featured }),
                ...(v.generated_image === undefined ? null : { generatedImage: v.generated_image }),
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.name === undefined ? null : { name: v.name }),
                ...(v.nsfw === undefined ? null : { nsfw: v.nsfw }),
            };
        });

    export type Outbound = {
        description?: string | undefined;
        featured?: boolean | undefined;
        generated_image?: GetPlatformModelsGeneratedImages$.Outbound | null | undefined;
        id?: string | null | undefined;
        name?: string | undefined;
        nsfw?: boolean | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, GetPlatformModelsCustomModels> =
        z
            .object({
                description: z.string().optional(),
                featured: z.boolean().optional(),
                generatedImage: z
                    .nullable(z.lazy(() => GetPlatformModelsGeneratedImages$.outboundSchema))
                    .optional(),
                id: z.nullable(z.string()).optional(),
                name: z.string().optional(),
                nsfw: z.boolean().optional(),
            })
            .transform((v) => {
                return {
                    ...(v.description === undefined ? null : { description: v.description }),
                    ...(v.featured === undefined ? null : { featured: v.featured }),
                    ...(v.generatedImage === undefined
                        ? null
                        : { generated_image: v.generatedImage }),
                    ...(v.id === undefined ? null : { id: v.id }),
                    ...(v.name === undefined ? null : { name: v.name }),
                    ...(v.nsfw === undefined ? null : { nsfw: v.nsfw }),
                };
            });
}

/** @internal */
export namespace GetPlatformModelsResponseBody$ {
    export type Inbound = {
        custom_models?: Array<GetPlatformModelsCustomModels$.Inbound> | undefined;
    };

    export const inboundSchema: z.ZodType<GetPlatformModelsResponseBody, z.ZodTypeDef, Inbound> = z
        .object({
            custom_models: z
                .array(z.lazy(() => GetPlatformModelsCustomModels$.inboundSchema))
                .optional(),
        })
        .transform((v) => {
            return {
                ...(v.custom_models === undefined ? null : { customModels: v.custom_models }),
            };
        });

    export type Outbound = {
        custom_models?: Array<GetPlatformModelsCustomModels$.Outbound> | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, GetPlatformModelsResponseBody> =
        z
            .object({
                customModels: z
                    .array(z.lazy(() => GetPlatformModelsCustomModels$.outboundSchema))
                    .optional(),
            })
            .transform((v) => {
                return {
                    ...(v.customModels === undefined ? null : { custom_models: v.customModels }),
                };
            });
}

/** @internal */
export namespace GetPlatformModelsResponse$ {
    export type Inbound = {
        ContentType: string;
        StatusCode: number;
        RawResponse: Response;
        object?: GetPlatformModelsResponseBody$.Inbound | undefined;
    };

    export const inboundSchema: z.ZodType<GetPlatformModelsResponse, z.ZodTypeDef, Inbound> = z
        .object({
            ContentType: z.string(),
            StatusCode: z.number().int(),
            RawResponse: z.instanceof(Response),
            object: z.lazy(() => GetPlatformModelsResponseBody$.inboundSchema).optional(),
        })
        .transform((v) => {
            return {
                contentType: v.ContentType,
                statusCode: v.StatusCode,
                rawResponse: v.RawResponse,
                ...(v.object === undefined ? null : { object: v.object }),
            };
        });

    export type Outbound = {
        ContentType: string;
        StatusCode: number;
        RawResponse: never;
        object?: GetPlatformModelsResponseBody$.Outbound | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, GetPlatformModelsResponse> = z
        .object({
            contentType: z.string(),
            statusCode: z.number().int(),
            rawResponse: z.instanceof(Response).transform(() => {
                throw new Error("Response cannot be serialized");
            }),
            object: z.lazy(() => GetPlatformModelsResponseBody$.outboundSchema).optional(),
        })
        .transform((v) => {
            return {
                ContentType: v.contentType,
                StatusCode: v.statusCode,
                RawResponse: v.rawResponse,
                ...(v.object === undefined ? null : { object: v.object }),
            };
        });
}
