/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../../lib/primitives.js";
import { safeParse } from "../../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import * as shared from "../shared/index.js";

export type GetModelByIdRequest = {
  /**
   * The ID of the custom model to return.
   */
  id: string;
};

/**
 * columns and relationships of "custom_models"
 */
export type GetModelByIdCustomModels = {
  createdAt?: string | undefined;
  description?: string | undefined;
  id?: string | null | undefined;
  instancePrompt?: string | null | undefined;
  modelHeight?: number | undefined;
  modelWidth?: number | undefined;
  name?: string | undefined;
  public?: boolean | undefined;
  /**
   * The base version of stable diffusion to use if not using a custom model. v1_5 is 1.5, v2 is 2.1, if not specified it will default to v1_5. Also includes SDXL and SDXL Lightning models
   */
  sdVersion?: shared.SdVersions | undefined;
  /**
   * The status of the current task.
   */
  status?: shared.JobStatus | undefined;
  /**
   * The category the most accurately reflects the model.
   */
  type?: shared.CustomModelType | undefined;
  updatedAt?: string | undefined;
};

/**
 * Responses for GET /models/{id}
 */
export type GetModelByIdResponseBody = {
  /**
   * columns and relationships of "custom_models"
   */
  customModelsByPk?: GetModelByIdCustomModels | null | undefined;
};

export type GetModelByIdResponse = {
  /**
   * HTTP response content type for this operation
   */
  contentType: string;
  /**
   * HTTP response status code for this operation
   */
  statusCode: number;
  /**
   * Raw HTTP response; suitable for custom response parsing
   */
  rawResponse: Response;
  /**
   * Responses for GET /models/{id}
   */
  object?: GetModelByIdResponseBody | undefined;
};

/** @internal */
export const GetModelByIdRequest$inboundSchema: z.ZodType<
  GetModelByIdRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string(),
});

/** @internal */
export type GetModelByIdRequest$Outbound = {
  id: string;
};

/** @internal */
export const GetModelByIdRequest$outboundSchema: z.ZodType<
  GetModelByIdRequest$Outbound,
  z.ZodTypeDef,
  GetModelByIdRequest
> = z.object({
  id: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetModelByIdRequest$ {
  /** @deprecated use `GetModelByIdRequest$inboundSchema` instead. */
  export const inboundSchema = GetModelByIdRequest$inboundSchema;
  /** @deprecated use `GetModelByIdRequest$outboundSchema` instead. */
  export const outboundSchema = GetModelByIdRequest$outboundSchema;
  /** @deprecated use `GetModelByIdRequest$Outbound` instead. */
  export type Outbound = GetModelByIdRequest$Outbound;
}

export function getModelByIdRequestToJSON(
  getModelByIdRequest: GetModelByIdRequest,
): string {
  return JSON.stringify(
    GetModelByIdRequest$outboundSchema.parse(getModelByIdRequest),
  );
}

export function getModelByIdRequestFromJSON(
  jsonString: string,
): SafeParseResult<GetModelByIdRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetModelByIdRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetModelByIdRequest' from JSON`,
  );
}

/** @internal */
export const GetModelByIdCustomModels$inboundSchema: z.ZodType<
  GetModelByIdCustomModels,
  z.ZodTypeDef,
  unknown
> = z.object({
  createdAt: z.string().optional(),
  description: z.string().optional(),
  id: z.nullable(z.string()).optional(),
  instancePrompt: z.nullable(z.string()).optional(),
  modelHeight: z.number().int().optional(),
  modelWidth: z.number().int().optional(),
  name: z.string().optional(),
  public: z.boolean().optional(),
  sdVersion: shared.SdVersions$inboundSchema.optional(),
  status: shared.JobStatus$inboundSchema.optional(),
  type: shared.CustomModelType$inboundSchema.default(
    shared.CustomModelType.General,
  ),
  updatedAt: z.string().optional(),
});

/** @internal */
export type GetModelByIdCustomModels$Outbound = {
  createdAt?: string | undefined;
  description?: string | undefined;
  id?: string | null | undefined;
  instancePrompt?: string | null | undefined;
  modelHeight?: number | undefined;
  modelWidth?: number | undefined;
  name?: string | undefined;
  public?: boolean | undefined;
  sdVersion?: string | undefined;
  status?: string | undefined;
  type: string;
  updatedAt?: string | undefined;
};

/** @internal */
export const GetModelByIdCustomModels$outboundSchema: z.ZodType<
  GetModelByIdCustomModels$Outbound,
  z.ZodTypeDef,
  GetModelByIdCustomModels
> = z.object({
  createdAt: z.string().optional(),
  description: z.string().optional(),
  id: z.nullable(z.string()).optional(),
  instancePrompt: z.nullable(z.string()).optional(),
  modelHeight: z.number().int().optional(),
  modelWidth: z.number().int().optional(),
  name: z.string().optional(),
  public: z.boolean().optional(),
  sdVersion: shared.SdVersions$outboundSchema.optional(),
  status: shared.JobStatus$outboundSchema.optional(),
  type: shared.CustomModelType$outboundSchema.default(
    shared.CustomModelType.General,
  ),
  updatedAt: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetModelByIdCustomModels$ {
  /** @deprecated use `GetModelByIdCustomModels$inboundSchema` instead. */
  export const inboundSchema = GetModelByIdCustomModels$inboundSchema;
  /** @deprecated use `GetModelByIdCustomModels$outboundSchema` instead. */
  export const outboundSchema = GetModelByIdCustomModels$outboundSchema;
  /** @deprecated use `GetModelByIdCustomModels$Outbound` instead. */
  export type Outbound = GetModelByIdCustomModels$Outbound;
}

export function getModelByIdCustomModelsToJSON(
  getModelByIdCustomModels: GetModelByIdCustomModels,
): string {
  return JSON.stringify(
    GetModelByIdCustomModels$outboundSchema.parse(getModelByIdCustomModels),
  );
}

export function getModelByIdCustomModelsFromJSON(
  jsonString: string,
): SafeParseResult<GetModelByIdCustomModels, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetModelByIdCustomModels$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetModelByIdCustomModels' from JSON`,
  );
}

/** @internal */
export const GetModelByIdResponseBody$inboundSchema: z.ZodType<
  GetModelByIdResponseBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  custom_models_by_pk: z.nullable(
    z.lazy(() => GetModelByIdCustomModels$inboundSchema),
  ).optional(),
}).transform((v) => {
  return remap$(v, {
    "custom_models_by_pk": "customModelsByPk",
  });
});

/** @internal */
export type GetModelByIdResponseBody$Outbound = {
  custom_models_by_pk?: GetModelByIdCustomModels$Outbound | null | undefined;
};

/** @internal */
export const GetModelByIdResponseBody$outboundSchema: z.ZodType<
  GetModelByIdResponseBody$Outbound,
  z.ZodTypeDef,
  GetModelByIdResponseBody
> = z.object({
  customModelsByPk: z.nullable(
    z.lazy(() => GetModelByIdCustomModels$outboundSchema),
  ).optional(),
}).transform((v) => {
  return remap$(v, {
    customModelsByPk: "custom_models_by_pk",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetModelByIdResponseBody$ {
  /** @deprecated use `GetModelByIdResponseBody$inboundSchema` instead. */
  export const inboundSchema = GetModelByIdResponseBody$inboundSchema;
  /** @deprecated use `GetModelByIdResponseBody$outboundSchema` instead. */
  export const outboundSchema = GetModelByIdResponseBody$outboundSchema;
  /** @deprecated use `GetModelByIdResponseBody$Outbound` instead. */
  export type Outbound = GetModelByIdResponseBody$Outbound;
}

export function getModelByIdResponseBodyToJSON(
  getModelByIdResponseBody: GetModelByIdResponseBody,
): string {
  return JSON.stringify(
    GetModelByIdResponseBody$outboundSchema.parse(getModelByIdResponseBody),
  );
}

export function getModelByIdResponseBodyFromJSON(
  jsonString: string,
): SafeParseResult<GetModelByIdResponseBody, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetModelByIdResponseBody$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetModelByIdResponseBody' from JSON`,
  );
}

/** @internal */
export const GetModelByIdResponse$inboundSchema: z.ZodType<
  GetModelByIdResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  ContentType: z.string(),
  StatusCode: z.number().int(),
  RawResponse: z.instanceof(Response),
  object: z.lazy(() => GetModelByIdResponseBody$inboundSchema).optional(),
}).transform((v) => {
  return remap$(v, {
    "ContentType": "contentType",
    "StatusCode": "statusCode",
    "RawResponse": "rawResponse",
  });
});

/** @internal */
export type GetModelByIdResponse$Outbound = {
  ContentType: string;
  StatusCode: number;
  RawResponse: never;
  object?: GetModelByIdResponseBody$Outbound | undefined;
};

/** @internal */
export const GetModelByIdResponse$outboundSchema: z.ZodType<
  GetModelByIdResponse$Outbound,
  z.ZodTypeDef,
  GetModelByIdResponse
> = z.object({
  contentType: z.string(),
  statusCode: z.number().int(),
  rawResponse: z.instanceof(Response).transform(() => {
    throw new Error("Response cannot be serialized");
  }),
  object: z.lazy(() => GetModelByIdResponseBody$outboundSchema).optional(),
}).transform((v) => {
  return remap$(v, {
    contentType: "ContentType",
    statusCode: "StatusCode",
    rawResponse: "RawResponse",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetModelByIdResponse$ {
  /** @deprecated use `GetModelByIdResponse$inboundSchema` instead. */
  export const inboundSchema = GetModelByIdResponse$inboundSchema;
  /** @deprecated use `GetModelByIdResponse$outboundSchema` instead. */
  export const outboundSchema = GetModelByIdResponse$outboundSchema;
  /** @deprecated use `GetModelByIdResponse$Outbound` instead. */
  export type Outbound = GetModelByIdResponse$Outbound;
}

export function getModelByIdResponseToJSON(
  getModelByIdResponse: GetModelByIdResponse,
): string {
  return JSON.stringify(
    GetModelByIdResponse$outboundSchema.parse(getModelByIdResponse),
  );
}

export function getModelByIdResponseFromJSON(
  jsonString: string,
): SafeParseResult<GetModelByIdResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetModelByIdResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetModelByIdResponse' from JSON`,
  );
}
