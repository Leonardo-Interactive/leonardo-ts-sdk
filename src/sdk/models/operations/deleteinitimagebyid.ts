/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { z } from "zod";

export type DeleteInitImageByIdRequest = {
    /**
     * _"id" is required_
     */
    id: string;
};

/**
 * columns and relationships of "init_images"
 */
export type InitImages = {
    id?: string | null | undefined;
};

/**
 * Responses for DELETE /init-image/{id}
 */
export type DeleteInitImageByIdResponseBody = {
    /**
     * columns and relationships of "init_images"
     */
    deleteInitImagesByPk?: InitImages | null | undefined;
};

export type DeleteInitImageByIdResponse = {
    /**
     * HTTP response content type for this operation
     */
    contentType: string;
    /**
     * HTTP response status code for this operation
     */
    statusCode: number;
    /**
     * Raw HTTP response; suitable for custom response parsing
     */
    rawResponse: Response;
    /**
     * Responses for DELETE /init-image/{id}
     */
    object?: DeleteInitImageByIdResponseBody | undefined;
};

/** @internal */
export namespace DeleteInitImageByIdRequest$ {
    export type Inbound = {
        id: string;
    };

    export const inboundSchema: z.ZodType<DeleteInitImageByIdRequest, z.ZodTypeDef, Inbound> = z
        .object({
            id: z.string(),
        })
        .transform((v) => {
            return {
                id: v.id,
            };
        });

    export type Outbound = {
        id: string;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, DeleteInitImageByIdRequest> = z
        .object({
            id: z.string(),
        })
        .transform((v) => {
            return {
                id: v.id,
            };
        });
}

/** @internal */
export namespace InitImages$ {
    export type Inbound = {
        id?: string | null | undefined;
    };

    export const inboundSchema: z.ZodType<InitImages, z.ZodTypeDef, Inbound> = z
        .object({
            id: z.nullable(z.string()).optional(),
        })
        .transform((v) => {
            return {
                ...(v.id === undefined ? null : { id: v.id }),
            };
        });

    export type Outbound = {
        id?: string | null | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, InitImages> = z
        .object({
            id: z.nullable(z.string()).optional(),
        })
        .transform((v) => {
            return {
                ...(v.id === undefined ? null : { id: v.id }),
            };
        });
}

/** @internal */
export namespace DeleteInitImageByIdResponseBody$ {
    export type Inbound = {
        delete_init_images_by_pk?: InitImages$.Inbound | null | undefined;
    };

    export const inboundSchema: z.ZodType<DeleteInitImageByIdResponseBody, z.ZodTypeDef, Inbound> =
        z
            .object({
                delete_init_images_by_pk: z
                    .nullable(z.lazy(() => InitImages$.inboundSchema))
                    .optional(),
            })
            .transform((v) => {
                return {
                    ...(v.delete_init_images_by_pk === undefined
                        ? null
                        : { deleteInitImagesByPk: v.delete_init_images_by_pk }),
                };
            });

    export type Outbound = {
        delete_init_images_by_pk?: InitImages$.Outbound | null | undefined;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        DeleteInitImageByIdResponseBody
    > = z
        .object({
            deleteInitImagesByPk: z.nullable(z.lazy(() => InitImages$.outboundSchema)).optional(),
        })
        .transform((v) => {
            return {
                ...(v.deleteInitImagesByPk === undefined
                    ? null
                    : { delete_init_images_by_pk: v.deleteInitImagesByPk }),
            };
        });
}

/** @internal */
export namespace DeleteInitImageByIdResponse$ {
    export type Inbound = {
        ContentType: string;
        StatusCode: number;
        RawResponse: Response;
        object?: DeleteInitImageByIdResponseBody$.Inbound | undefined;
    };

    export const inboundSchema: z.ZodType<DeleteInitImageByIdResponse, z.ZodTypeDef, Inbound> = z
        .object({
            ContentType: z.string(),
            StatusCode: z.number().int(),
            RawResponse: z.instanceof(Response),
            object: z.lazy(() => DeleteInitImageByIdResponseBody$.inboundSchema).optional(),
        })
        .transform((v) => {
            return {
                contentType: v.ContentType,
                statusCode: v.StatusCode,
                rawResponse: v.RawResponse,
                ...(v.object === undefined ? null : { object: v.object }),
            };
        });

    export type Outbound = {
        ContentType: string;
        StatusCode: number;
        RawResponse: never;
        object?: DeleteInitImageByIdResponseBody$.Outbound | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, DeleteInitImageByIdResponse> = z
        .object({
            contentType: z.string(),
            statusCode: z.number().int(),
            rawResponse: z.instanceof(Response).transform(() => {
                throw new Error("Response cannot be serialized");
            }),
            object: z.lazy(() => DeleteInitImageByIdResponseBody$.outboundSchema).optional(),
        })
        .transform((v) => {
            return {
                ContentType: v.contentType,
                StatusCode: v.statusCode,
                RawResponse: v.rawResponse,
                ...(v.object === undefined ? null : { object: v.object }),
            };
        });
}
