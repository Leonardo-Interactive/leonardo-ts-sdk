/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../../lib/primitives.js";
import { safeParse } from "../../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type GetInitImageByIdRequest = {
  /**
   * _"id" is required_
   */
  id: string;
};

/**
 * columns and relationships of "init_images"
 */
export type GetInitImageByIdInitImages = {
  createdAt?: string | undefined;
  id?: string | null | undefined;
  url?: string | undefined;
};

/**
 * Responses for GET /init-image/{id}
 */
export type GetInitImageByIdResponseBody = {
  /**
   * columns and relationships of "init_images"
   */
  initImagesByPk?: GetInitImageByIdInitImages | null | undefined;
};

export type GetInitImageByIdResponse = {
  /**
   * HTTP response content type for this operation
   */
  contentType: string;
  /**
   * HTTP response status code for this operation
   */
  statusCode: number;
  /**
   * Raw HTTP response; suitable for custom response parsing
   */
  rawResponse: Response;
  /**
   * Responses for GET /init-image/{id}
   */
  object?: GetInitImageByIdResponseBody | undefined;
};

/** @internal */
export const GetInitImageByIdRequest$inboundSchema: z.ZodType<
  GetInitImageByIdRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string(),
});

/** @internal */
export type GetInitImageByIdRequest$Outbound = {
  id: string;
};

/** @internal */
export const GetInitImageByIdRequest$outboundSchema: z.ZodType<
  GetInitImageByIdRequest$Outbound,
  z.ZodTypeDef,
  GetInitImageByIdRequest
> = z.object({
  id: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetInitImageByIdRequest$ {
  /** @deprecated use `GetInitImageByIdRequest$inboundSchema` instead. */
  export const inboundSchema = GetInitImageByIdRequest$inboundSchema;
  /** @deprecated use `GetInitImageByIdRequest$outboundSchema` instead. */
  export const outboundSchema = GetInitImageByIdRequest$outboundSchema;
  /** @deprecated use `GetInitImageByIdRequest$Outbound` instead. */
  export type Outbound = GetInitImageByIdRequest$Outbound;
}

export function getInitImageByIdRequestToJSON(
  getInitImageByIdRequest: GetInitImageByIdRequest,
): string {
  return JSON.stringify(
    GetInitImageByIdRequest$outboundSchema.parse(getInitImageByIdRequest),
  );
}

export function getInitImageByIdRequestFromJSON(
  jsonString: string,
): SafeParseResult<GetInitImageByIdRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetInitImageByIdRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetInitImageByIdRequest' from JSON`,
  );
}

/** @internal */
export const GetInitImageByIdInitImages$inboundSchema: z.ZodType<
  GetInitImageByIdInitImages,
  z.ZodTypeDef,
  unknown
> = z.object({
  createdAt: z.string().optional(),
  id: z.nullable(z.string()).optional(),
  url: z.string().optional(),
});

/** @internal */
export type GetInitImageByIdInitImages$Outbound = {
  createdAt?: string | undefined;
  id?: string | null | undefined;
  url?: string | undefined;
};

/** @internal */
export const GetInitImageByIdInitImages$outboundSchema: z.ZodType<
  GetInitImageByIdInitImages$Outbound,
  z.ZodTypeDef,
  GetInitImageByIdInitImages
> = z.object({
  createdAt: z.string().optional(),
  id: z.nullable(z.string()).optional(),
  url: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetInitImageByIdInitImages$ {
  /** @deprecated use `GetInitImageByIdInitImages$inboundSchema` instead. */
  export const inboundSchema = GetInitImageByIdInitImages$inboundSchema;
  /** @deprecated use `GetInitImageByIdInitImages$outboundSchema` instead. */
  export const outboundSchema = GetInitImageByIdInitImages$outboundSchema;
  /** @deprecated use `GetInitImageByIdInitImages$Outbound` instead. */
  export type Outbound = GetInitImageByIdInitImages$Outbound;
}

export function getInitImageByIdInitImagesToJSON(
  getInitImageByIdInitImages: GetInitImageByIdInitImages,
): string {
  return JSON.stringify(
    GetInitImageByIdInitImages$outboundSchema.parse(getInitImageByIdInitImages),
  );
}

export function getInitImageByIdInitImagesFromJSON(
  jsonString: string,
): SafeParseResult<GetInitImageByIdInitImages, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetInitImageByIdInitImages$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetInitImageByIdInitImages' from JSON`,
  );
}

/** @internal */
export const GetInitImageByIdResponseBody$inboundSchema: z.ZodType<
  GetInitImageByIdResponseBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  init_images_by_pk: z.nullable(
    z.lazy(() => GetInitImageByIdInitImages$inboundSchema),
  ).optional(),
}).transform((v) => {
  return remap$(v, {
    "init_images_by_pk": "initImagesByPk",
  });
});

/** @internal */
export type GetInitImageByIdResponseBody$Outbound = {
  init_images_by_pk?: GetInitImageByIdInitImages$Outbound | null | undefined;
};

/** @internal */
export const GetInitImageByIdResponseBody$outboundSchema: z.ZodType<
  GetInitImageByIdResponseBody$Outbound,
  z.ZodTypeDef,
  GetInitImageByIdResponseBody
> = z.object({
  initImagesByPk: z.nullable(
    z.lazy(() => GetInitImageByIdInitImages$outboundSchema),
  ).optional(),
}).transform((v) => {
  return remap$(v, {
    initImagesByPk: "init_images_by_pk",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetInitImageByIdResponseBody$ {
  /** @deprecated use `GetInitImageByIdResponseBody$inboundSchema` instead. */
  export const inboundSchema = GetInitImageByIdResponseBody$inboundSchema;
  /** @deprecated use `GetInitImageByIdResponseBody$outboundSchema` instead. */
  export const outboundSchema = GetInitImageByIdResponseBody$outboundSchema;
  /** @deprecated use `GetInitImageByIdResponseBody$Outbound` instead. */
  export type Outbound = GetInitImageByIdResponseBody$Outbound;
}

export function getInitImageByIdResponseBodyToJSON(
  getInitImageByIdResponseBody: GetInitImageByIdResponseBody,
): string {
  return JSON.stringify(
    GetInitImageByIdResponseBody$outboundSchema.parse(
      getInitImageByIdResponseBody,
    ),
  );
}

export function getInitImageByIdResponseBodyFromJSON(
  jsonString: string,
): SafeParseResult<GetInitImageByIdResponseBody, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetInitImageByIdResponseBody$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetInitImageByIdResponseBody' from JSON`,
  );
}

/** @internal */
export const GetInitImageByIdResponse$inboundSchema: z.ZodType<
  GetInitImageByIdResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  ContentType: z.string(),
  StatusCode: z.number().int(),
  RawResponse: z.instanceof(Response),
  object: z.lazy(() => GetInitImageByIdResponseBody$inboundSchema).optional(),
}).transform((v) => {
  return remap$(v, {
    "ContentType": "contentType",
    "StatusCode": "statusCode",
    "RawResponse": "rawResponse",
  });
});

/** @internal */
export type GetInitImageByIdResponse$Outbound = {
  ContentType: string;
  StatusCode: number;
  RawResponse: never;
  object?: GetInitImageByIdResponseBody$Outbound | undefined;
};

/** @internal */
export const GetInitImageByIdResponse$outboundSchema: z.ZodType<
  GetInitImageByIdResponse$Outbound,
  z.ZodTypeDef,
  GetInitImageByIdResponse
> = z.object({
  contentType: z.string(),
  statusCode: z.number().int(),
  rawResponse: z.instanceof(Response).transform(() => {
    throw new Error("Response cannot be serialized");
  }),
  object: z.lazy(() => GetInitImageByIdResponseBody$outboundSchema).optional(),
}).transform((v) => {
  return remap$(v, {
    contentType: "ContentType",
    statusCode: "StatusCode",
    rawResponse: "RawResponse",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetInitImageByIdResponse$ {
  /** @deprecated use `GetInitImageByIdResponse$inboundSchema` instead. */
  export const inboundSchema = GetInitImageByIdResponse$inboundSchema;
  /** @deprecated use `GetInitImageByIdResponse$outboundSchema` instead. */
  export const outboundSchema = GetInitImageByIdResponse$outboundSchema;
  /** @deprecated use `GetInitImageByIdResponse$Outbound` instead. */
  export type Outbound = GetInitImageByIdResponse$Outbound;
}

export function getInitImageByIdResponseToJSON(
  getInitImageByIdResponse: GetInitImageByIdResponse,
): string {
  return JSON.stringify(
    GetInitImageByIdResponse$outboundSchema.parse(getInitImageByIdResponse),
  );
}

export function getInitImageByIdResponseFromJSON(
  jsonString: string,
): SafeParseResult<GetInitImageByIdResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetInitImageByIdResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetInitImageByIdResponse' from JSON`,
  );
}
