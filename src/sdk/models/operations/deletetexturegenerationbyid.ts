/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../../lib/primitives.js";
import { safeParse } from "../../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

/**
 * Query parameters can also be provided in the request body as a JSON object
 */
export type DeleteTextureGenerationByIdRequestBody = {
  id?: string | null | undefined;
};

export type DeleteTextureGenerationByIdRequest = {
  /**
   * Query parameters can also be provided in the request body as a JSON object
   */
  requestBody?: DeleteTextureGenerationByIdRequestBody | undefined;
  /**
   * _"id" is required (enter it either in parameters or request body)_
   */
  id: string;
};

/**
 * columns and relationships of "model_asset_texture_generations"
 */
export type ModelAssetTextureGenerations = {
  id?: string | null | undefined;
};

/**
 * Responses for DELETE /api/rest/v1/generations-texture/{id}
 */
export type DeleteTextureGenerationByIdResponseBody = {
  /**
   * columns and relationships of "model_asset_texture_generations"
   */
  deleteModelAssetTextureGenerationsByPk?:
    | ModelAssetTextureGenerations
    | null
    | undefined;
};

export type DeleteTextureGenerationByIdResponse = {
  /**
   * HTTP response content type for this operation
   */
  contentType: string;
  /**
   * HTTP response status code for this operation
   */
  statusCode: number;
  /**
   * Raw HTTP response; suitable for custom response parsing
   */
  rawResponse: Response;
  /**
   * Responses for DELETE /api/rest/v1/generations-texture/{id}
   */
  object?: DeleteTextureGenerationByIdResponseBody | undefined;
};

/** @internal */
export const DeleteTextureGenerationByIdRequestBody$inboundSchema: z.ZodType<
  DeleteTextureGenerationByIdRequestBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.nullable(z.string()).optional(),
});

/** @internal */
export type DeleteTextureGenerationByIdRequestBody$Outbound = {
  id?: string | null | undefined;
};

/** @internal */
export const DeleteTextureGenerationByIdRequestBody$outboundSchema: z.ZodType<
  DeleteTextureGenerationByIdRequestBody$Outbound,
  z.ZodTypeDef,
  DeleteTextureGenerationByIdRequestBody
> = z.object({
  id: z.nullable(z.string()).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DeleteTextureGenerationByIdRequestBody$ {
  /** @deprecated use `DeleteTextureGenerationByIdRequestBody$inboundSchema` instead. */
  export const inboundSchema =
    DeleteTextureGenerationByIdRequestBody$inboundSchema;
  /** @deprecated use `DeleteTextureGenerationByIdRequestBody$outboundSchema` instead. */
  export const outboundSchema =
    DeleteTextureGenerationByIdRequestBody$outboundSchema;
  /** @deprecated use `DeleteTextureGenerationByIdRequestBody$Outbound` instead. */
  export type Outbound = DeleteTextureGenerationByIdRequestBody$Outbound;
}

export function deleteTextureGenerationByIdRequestBodyToJSON(
  deleteTextureGenerationByIdRequestBody:
    DeleteTextureGenerationByIdRequestBody,
): string {
  return JSON.stringify(
    DeleteTextureGenerationByIdRequestBody$outboundSchema.parse(
      deleteTextureGenerationByIdRequestBody,
    ),
  );
}

export function deleteTextureGenerationByIdRequestBodyFromJSON(
  jsonString: string,
): SafeParseResult<DeleteTextureGenerationByIdRequestBody, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      DeleteTextureGenerationByIdRequestBody$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'DeleteTextureGenerationByIdRequestBody' from JSON`,
  );
}

/** @internal */
export const DeleteTextureGenerationByIdRequest$inboundSchema: z.ZodType<
  DeleteTextureGenerationByIdRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  RequestBody: z.lazy(() =>
    DeleteTextureGenerationByIdRequestBody$inboundSchema
  ).optional(),
  id: z.string(),
}).transform((v) => {
  return remap$(v, {
    "RequestBody": "requestBody",
  });
});

/** @internal */
export type DeleteTextureGenerationByIdRequest$Outbound = {
  RequestBody?: DeleteTextureGenerationByIdRequestBody$Outbound | undefined;
  id: string;
};

/** @internal */
export const DeleteTextureGenerationByIdRequest$outboundSchema: z.ZodType<
  DeleteTextureGenerationByIdRequest$Outbound,
  z.ZodTypeDef,
  DeleteTextureGenerationByIdRequest
> = z.object({
  requestBody: z.lazy(() =>
    DeleteTextureGenerationByIdRequestBody$outboundSchema
  ).optional(),
  id: z.string(),
}).transform((v) => {
  return remap$(v, {
    requestBody: "RequestBody",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DeleteTextureGenerationByIdRequest$ {
  /** @deprecated use `DeleteTextureGenerationByIdRequest$inboundSchema` instead. */
  export const inboundSchema = DeleteTextureGenerationByIdRequest$inboundSchema;
  /** @deprecated use `DeleteTextureGenerationByIdRequest$outboundSchema` instead. */
  export const outboundSchema =
    DeleteTextureGenerationByIdRequest$outboundSchema;
  /** @deprecated use `DeleteTextureGenerationByIdRequest$Outbound` instead. */
  export type Outbound = DeleteTextureGenerationByIdRequest$Outbound;
}

export function deleteTextureGenerationByIdRequestToJSON(
  deleteTextureGenerationByIdRequest: DeleteTextureGenerationByIdRequest,
): string {
  return JSON.stringify(
    DeleteTextureGenerationByIdRequest$outboundSchema.parse(
      deleteTextureGenerationByIdRequest,
    ),
  );
}

export function deleteTextureGenerationByIdRequestFromJSON(
  jsonString: string,
): SafeParseResult<DeleteTextureGenerationByIdRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      DeleteTextureGenerationByIdRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'DeleteTextureGenerationByIdRequest' from JSON`,
  );
}

/** @internal */
export const ModelAssetTextureGenerations$inboundSchema: z.ZodType<
  ModelAssetTextureGenerations,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.nullable(z.string()).optional(),
});

/** @internal */
export type ModelAssetTextureGenerations$Outbound = {
  id?: string | null | undefined;
};

/** @internal */
export const ModelAssetTextureGenerations$outboundSchema: z.ZodType<
  ModelAssetTextureGenerations$Outbound,
  z.ZodTypeDef,
  ModelAssetTextureGenerations
> = z.object({
  id: z.nullable(z.string()).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ModelAssetTextureGenerations$ {
  /** @deprecated use `ModelAssetTextureGenerations$inboundSchema` instead. */
  export const inboundSchema = ModelAssetTextureGenerations$inboundSchema;
  /** @deprecated use `ModelAssetTextureGenerations$outboundSchema` instead. */
  export const outboundSchema = ModelAssetTextureGenerations$outboundSchema;
  /** @deprecated use `ModelAssetTextureGenerations$Outbound` instead. */
  export type Outbound = ModelAssetTextureGenerations$Outbound;
}

export function modelAssetTextureGenerationsToJSON(
  modelAssetTextureGenerations: ModelAssetTextureGenerations,
): string {
  return JSON.stringify(
    ModelAssetTextureGenerations$outboundSchema.parse(
      modelAssetTextureGenerations,
    ),
  );
}

export function modelAssetTextureGenerationsFromJSON(
  jsonString: string,
): SafeParseResult<ModelAssetTextureGenerations, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ModelAssetTextureGenerations$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ModelAssetTextureGenerations' from JSON`,
  );
}

/** @internal */
export const DeleteTextureGenerationByIdResponseBody$inboundSchema: z.ZodType<
  DeleteTextureGenerationByIdResponseBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  delete_model_asset_texture_generations_by_pk: z.nullable(
    z.lazy(() => ModelAssetTextureGenerations$inboundSchema),
  ).optional(),
}).transform((v) => {
  return remap$(v, {
    "delete_model_asset_texture_generations_by_pk":
      "deleteModelAssetTextureGenerationsByPk",
  });
});

/** @internal */
export type DeleteTextureGenerationByIdResponseBody$Outbound = {
  delete_model_asset_texture_generations_by_pk?:
    | ModelAssetTextureGenerations$Outbound
    | null
    | undefined;
};

/** @internal */
export const DeleteTextureGenerationByIdResponseBody$outboundSchema: z.ZodType<
  DeleteTextureGenerationByIdResponseBody$Outbound,
  z.ZodTypeDef,
  DeleteTextureGenerationByIdResponseBody
> = z.object({
  deleteModelAssetTextureGenerationsByPk: z.nullable(
    z.lazy(() => ModelAssetTextureGenerations$outboundSchema),
  ).optional(),
}).transform((v) => {
  return remap$(v, {
    deleteModelAssetTextureGenerationsByPk:
      "delete_model_asset_texture_generations_by_pk",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DeleteTextureGenerationByIdResponseBody$ {
  /** @deprecated use `DeleteTextureGenerationByIdResponseBody$inboundSchema` instead. */
  export const inboundSchema =
    DeleteTextureGenerationByIdResponseBody$inboundSchema;
  /** @deprecated use `DeleteTextureGenerationByIdResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    DeleteTextureGenerationByIdResponseBody$outboundSchema;
  /** @deprecated use `DeleteTextureGenerationByIdResponseBody$Outbound` instead. */
  export type Outbound = DeleteTextureGenerationByIdResponseBody$Outbound;
}

export function deleteTextureGenerationByIdResponseBodyToJSON(
  deleteTextureGenerationByIdResponseBody:
    DeleteTextureGenerationByIdResponseBody,
): string {
  return JSON.stringify(
    DeleteTextureGenerationByIdResponseBody$outboundSchema.parse(
      deleteTextureGenerationByIdResponseBody,
    ),
  );
}

export function deleteTextureGenerationByIdResponseBodyFromJSON(
  jsonString: string,
): SafeParseResult<
  DeleteTextureGenerationByIdResponseBody,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      DeleteTextureGenerationByIdResponseBody$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'DeleteTextureGenerationByIdResponseBody' from JSON`,
  );
}

/** @internal */
export const DeleteTextureGenerationByIdResponse$inboundSchema: z.ZodType<
  DeleteTextureGenerationByIdResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  ContentType: z.string(),
  StatusCode: z.number().int(),
  RawResponse: z.instanceof(Response),
  object: z.lazy(() => DeleteTextureGenerationByIdResponseBody$inboundSchema)
    .optional(),
}).transform((v) => {
  return remap$(v, {
    "ContentType": "contentType",
    "StatusCode": "statusCode",
    "RawResponse": "rawResponse",
  });
});

/** @internal */
export type DeleteTextureGenerationByIdResponse$Outbound = {
  ContentType: string;
  StatusCode: number;
  RawResponse: never;
  object?: DeleteTextureGenerationByIdResponseBody$Outbound | undefined;
};

/** @internal */
export const DeleteTextureGenerationByIdResponse$outboundSchema: z.ZodType<
  DeleteTextureGenerationByIdResponse$Outbound,
  z.ZodTypeDef,
  DeleteTextureGenerationByIdResponse
> = z.object({
  contentType: z.string(),
  statusCode: z.number().int(),
  rawResponse: z.instanceof(Response).transform(() => {
    throw new Error("Response cannot be serialized");
  }),
  object: z.lazy(() => DeleteTextureGenerationByIdResponseBody$outboundSchema)
    .optional(),
}).transform((v) => {
  return remap$(v, {
    contentType: "ContentType",
    statusCode: "StatusCode",
    rawResponse: "RawResponse",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DeleteTextureGenerationByIdResponse$ {
  /** @deprecated use `DeleteTextureGenerationByIdResponse$inboundSchema` instead. */
  export const inboundSchema =
    DeleteTextureGenerationByIdResponse$inboundSchema;
  /** @deprecated use `DeleteTextureGenerationByIdResponse$outboundSchema` instead. */
  export const outboundSchema =
    DeleteTextureGenerationByIdResponse$outboundSchema;
  /** @deprecated use `DeleteTextureGenerationByIdResponse$Outbound` instead. */
  export type Outbound = DeleteTextureGenerationByIdResponse$Outbound;
}

export function deleteTextureGenerationByIdResponseToJSON(
  deleteTextureGenerationByIdResponse: DeleteTextureGenerationByIdResponse,
): string {
  return JSON.stringify(
    DeleteTextureGenerationByIdResponse$outboundSchema.parse(
      deleteTextureGenerationByIdResponse,
    ),
  );
}

export function deleteTextureGenerationByIdResponseFromJSON(
  jsonString: string,
): SafeParseResult<DeleteTextureGenerationByIdResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      DeleteTextureGenerationByIdResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'DeleteTextureGenerationByIdResponse' from JSON`,
  );
}
