/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as z from "zod";

/**
 * Query parameters can also be provided in the request body as a JSON object
 */
export type CreateSVDMotionGenerationRequestBody = {
    /**
     * The ID of the image, supports generated images, variation images, and init images.
     */
    imageId: string;
    /**
     * If it is an init image uploaded by the user. This image is uploaded from endpoint: Upload init image.
     */
    isInitImage?: boolean | null | undefined;
    /**
     * Whether the generation is public or not
     */
    isPublic?: boolean | null | undefined;
    /**
     * If it is a variation image.
     */
    isVariation?: boolean | null | undefined;
    /**
     * The motion strength.
     */
    motionStrength?: number | null | undefined;
};

export type MotionSvdGenerationOutput = {
    /**
     * API credits cost, available for Production API users.
     */
    apiCreditCost?: number | null | undefined;
    generationId?: string | undefined;
};

/**
 * Responses for POST /generations-motion-svd
 */
export type CreateSVDMotionGenerationResponseBody = {
    sdGenerationJob?: MotionSvdGenerationOutput | null | undefined;
};

export type CreateSVDMotionGenerationResponse = {
    /**
     * HTTP response content type for this operation
     */
    contentType: string;
    /**
     * HTTP response status code for this operation
     */
    statusCode: number;
    /**
     * Raw HTTP response; suitable for custom response parsing
     */
    rawResponse: Response;
    /**
     * Responses for POST /generations-motion-svd
     */
    object?: CreateSVDMotionGenerationResponseBody | undefined;
};

/** @internal */
export namespace CreateSVDMotionGenerationRequestBody$ {
    export type Inbound = {
        imageId: string;
        isInitImage?: boolean | null | undefined;
        isPublic?: boolean | null | undefined;
        isVariation?: boolean | null | undefined;
        motionStrength?: number | null | undefined;
    };

    export const inboundSchema: z.ZodType<
        CreateSVDMotionGenerationRequestBody,
        z.ZodTypeDef,
        Inbound
    > = z
        .object({
            imageId: z.string(),
            isInitImage: z.nullable(z.boolean()).optional(),
            isPublic: z.nullable(z.boolean()).optional(),
            isVariation: z.nullable(z.boolean()).optional(),
            motionStrength: z.nullable(z.number().int()).optional(),
        })
        .transform((v) => {
            return {
                imageId: v.imageId,
                ...(v.isInitImage === undefined ? null : { isInitImage: v.isInitImage }),
                ...(v.isPublic === undefined ? null : { isPublic: v.isPublic }),
                ...(v.isVariation === undefined ? null : { isVariation: v.isVariation }),
                ...(v.motionStrength === undefined ? null : { motionStrength: v.motionStrength }),
            };
        });

    export type Outbound = {
        imageId: string;
        isInitImage?: boolean | null | undefined;
        isPublic?: boolean | null | undefined;
        isVariation?: boolean | null | undefined;
        motionStrength?: number | null | undefined;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        CreateSVDMotionGenerationRequestBody
    > = z
        .object({
            imageId: z.string(),
            isInitImage: z.nullable(z.boolean()).optional(),
            isPublic: z.nullable(z.boolean()).optional(),
            isVariation: z.nullable(z.boolean()).optional(),
            motionStrength: z.nullable(z.number().int()).optional(),
        })
        .transform((v) => {
            return {
                imageId: v.imageId,
                ...(v.isInitImage === undefined ? null : { isInitImage: v.isInitImage }),
                ...(v.isPublic === undefined ? null : { isPublic: v.isPublic }),
                ...(v.isVariation === undefined ? null : { isVariation: v.isVariation }),
                ...(v.motionStrength === undefined ? null : { motionStrength: v.motionStrength }),
            };
        });
}

/** @internal */
export namespace MotionSvdGenerationOutput$ {
    export type Inbound = {
        apiCreditCost?: number | null | undefined;
        generationId?: string | undefined;
    };

    export const inboundSchema: z.ZodType<MotionSvdGenerationOutput, z.ZodTypeDef, Inbound> = z
        .object({
            apiCreditCost: z.nullable(z.number().int()).optional(),
            generationId: z.string().optional(),
        })
        .transform((v) => {
            return {
                ...(v.apiCreditCost === undefined ? null : { apiCreditCost: v.apiCreditCost }),
                ...(v.generationId === undefined ? null : { generationId: v.generationId }),
            };
        });

    export type Outbound = {
        apiCreditCost?: number | null | undefined;
        generationId?: string | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, MotionSvdGenerationOutput> = z
        .object({
            apiCreditCost: z.nullable(z.number().int()).optional(),
            generationId: z.string().optional(),
        })
        .transform((v) => {
            return {
                ...(v.apiCreditCost === undefined ? null : { apiCreditCost: v.apiCreditCost }),
                ...(v.generationId === undefined ? null : { generationId: v.generationId }),
            };
        });
}

/** @internal */
export namespace CreateSVDMotionGenerationResponseBody$ {
    export type Inbound = {
        sdGenerationJob?: MotionSvdGenerationOutput$.Inbound | null | undefined;
    };

    export const inboundSchema: z.ZodType<
        CreateSVDMotionGenerationResponseBody,
        z.ZodTypeDef,
        Inbound
    > = z
        .object({
            sdGenerationJob: z
                .nullable(z.lazy(() => MotionSvdGenerationOutput$.inboundSchema))
                .optional(),
        })
        .transform((v) => {
            return {
                ...(v.sdGenerationJob === undefined
                    ? null
                    : { sdGenerationJob: v.sdGenerationJob }),
            };
        });

    export type Outbound = {
        sdGenerationJob?: MotionSvdGenerationOutput$.Outbound | null | undefined;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        CreateSVDMotionGenerationResponseBody
    > = z
        .object({
            sdGenerationJob: z
                .nullable(z.lazy(() => MotionSvdGenerationOutput$.outboundSchema))
                .optional(),
        })
        .transform((v) => {
            return {
                ...(v.sdGenerationJob === undefined
                    ? null
                    : { sdGenerationJob: v.sdGenerationJob }),
            };
        });
}

/** @internal */
export namespace CreateSVDMotionGenerationResponse$ {
    export type Inbound = {
        ContentType: string;
        StatusCode: number;
        RawResponse: Response;
        object?: CreateSVDMotionGenerationResponseBody$.Inbound | undefined;
    };

    export const inboundSchema: z.ZodType<
        CreateSVDMotionGenerationResponse,
        z.ZodTypeDef,
        Inbound
    > = z
        .object({
            ContentType: z.string(),
            StatusCode: z.number().int(),
            RawResponse: z.instanceof(Response),
            object: z.lazy(() => CreateSVDMotionGenerationResponseBody$.inboundSchema).optional(),
        })
        .transform((v) => {
            return {
                contentType: v.ContentType,
                statusCode: v.StatusCode,
                rawResponse: v.RawResponse,
                ...(v.object === undefined ? null : { object: v.object }),
            };
        });

    export type Outbound = {
        ContentType: string;
        StatusCode: number;
        RawResponse: never;
        object?: CreateSVDMotionGenerationResponseBody$.Outbound | undefined;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        CreateSVDMotionGenerationResponse
    > = z
        .object({
            contentType: z.string(),
            statusCode: z.number().int(),
            rawResponse: z.instanceof(Response).transform(() => {
                throw new Error("Response cannot be serialized");
            }),
            object: z.lazy(() => CreateSVDMotionGenerationResponseBody$.outboundSchema).optional(),
        })
        .transform((v) => {
            return {
                ContentType: v.contentType,
                StatusCode: v.statusCode,
                RawResponse: v.rawResponse,
                ...(v.object === undefined ? null : { object: v.object }),
            };
        });
}
