/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

export class GetGenerationByIdRequest extends SpeakeasyBase {
    /**
     * The ID of the generation to return.
     */
    @SpeakeasyMetadata({ data: "pathParam, style=simple;explode=false;name=id" })
    id: string;
}

/**
 * columns and relationships of "generated_image_variation_generic"
 */
export class GetGenerationById200ApplicationJSONGenerationsGeneratedImagesGeneratedImageVariationGeneric extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "id" })
    id?: string;

    /**
     * The status of the current task.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "status" })
    status?: shared.JobStatus;

    /**
     * The type of variation.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "transformType" })
    transformType?: shared.VariationType;

    @SpeakeasyMetadata()
    @Expose({ name: "url" })
    url?: string;
}

/**
 * columns and relationships of "generated_images"
 */
export class GetGenerationById200ApplicationJSONGenerationsGeneratedImages extends SpeakeasyBase {
    @SpeakeasyMetadata({
        elemType:
            GetGenerationById200ApplicationJSONGenerationsGeneratedImagesGeneratedImageVariationGeneric,
    })
    @Expose({ name: "generated_image_variation_generics" })
    @Type(
        () =>
            GetGenerationById200ApplicationJSONGenerationsGeneratedImagesGeneratedImageVariationGeneric
    )
    generatedImageVariationGenerics?: GetGenerationById200ApplicationJSONGenerationsGeneratedImagesGeneratedImageVariationGeneric[];

    @SpeakeasyMetadata()
    @Expose({ name: "id" })
    id?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "likeCount" })
    likeCount?: number;

    @SpeakeasyMetadata()
    @Expose({ name: "nsfw" })
    nsfw?: boolean;

    @SpeakeasyMetadata()
    @Expose({ name: "url" })
    url?: string;
}

/**
 * Element used for the generation.
 */
export class GetGenerationById200ApplicationJSONGenerationsGenerationElementsLoras extends SpeakeasyBase {
    /**
     * Unique identifier for the element. Elements can be found from the List Elements endpoint.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "akUUID" })
    akUUID?: string;

    /**
     * The base version of stable diffusion to use if not using a custom model. v1_5 is 1.5, v2 is 2.1, if not specified it will default to v1_5.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "baseModel" })
    baseModel?: shared.SdVersions;

    /**
     * Description for the element
     */
    @SpeakeasyMetadata()
    @Expose({ name: "description" })
    description?: string;

    /**
     * Name of the element
     */
    @SpeakeasyMetadata()
    @Expose({ name: "name" })
    name?: string;

    /**
     * URL of the element image
     */
    @SpeakeasyMetadata()
    @Expose({ name: "urlImage" })
    urlImage?: string;

    /**
     * Default weight for the element
     */
    @SpeakeasyMetadata()
    @Expose({ name: "weightDefault" })
    weightDefault?: number;

    /**
     * Maximum weight for the element
     */
    @SpeakeasyMetadata()
    @Expose({ name: "weightMax" })
    weightMax?: number;

    /**
     * Minimum weight for the element
     */
    @SpeakeasyMetadata()
    @Expose({ name: "weightMin" })
    weightMin?: number;
}

/**
 * This table captures the elements that are applied to Generations.
 */
export class GetGenerationById200ApplicationJSONGenerationsGenerationElements extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "id" })
    id?: number;

    /**
     * Element used for the generation.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "lora" })
    @Type(() => GetGenerationById200ApplicationJSONGenerationsGenerationElementsLoras)
    lora?: GetGenerationById200ApplicationJSONGenerationsGenerationElementsLoras;

    @SpeakeasyMetadata()
    @Expose({ name: "weightApplied" })
    weightApplied?: number;
}

/**
 * columns and relationships of "generations"
 */
export class GetGenerationById200ApplicationJSONGenerations extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "createdAt" })
    createdAt?: string;

    @SpeakeasyMetadata({ elemType: GetGenerationById200ApplicationJSONGenerationsGeneratedImages })
    @Expose({ name: "generated_images" })
    @Type(() => GetGenerationById200ApplicationJSONGenerationsGeneratedImages)
    generatedImages?: GetGenerationById200ApplicationJSONGenerationsGeneratedImages[];

    @SpeakeasyMetadata({
        elemType: GetGenerationById200ApplicationJSONGenerationsGenerationElements,
    })
    @Expose({ name: "generation_elements" })
    @Type(() => GetGenerationById200ApplicationJSONGenerationsGenerationElements)
    generationElements?: GetGenerationById200ApplicationJSONGenerationsGenerationElements[];

    @SpeakeasyMetadata()
    @Expose({ name: "guidanceScale" })
    guidanceScale?: number;

    @SpeakeasyMetadata()
    @Expose({ name: "id" })
    id?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "imageHeight" })
    imageHeight?: number;

    @SpeakeasyMetadata()
    @Expose({ name: "imageWidth" })
    imageWidth?: number;

    @SpeakeasyMetadata()
    @Expose({ name: "inferenceSteps" })
    inferenceSteps?: number;

    @SpeakeasyMetadata()
    @Expose({ name: "initStrength" })
    initStrength?: number;

    @SpeakeasyMetadata()
    @Expose({ name: "modelId" })
    modelId?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "negativePrompt" })
    negativePrompt?: string;

    /**
     * The style to generate images with. When photoReal is enabled, use CINEMATIC, CREATIVE, VIBRANT, or NONE. When alchemy is disabled, use LEONARDO or NONE. When alchemy is enabled, use ANIME, CREATIVE, DYNAMIC, ENVIRONMENT, GENERAL, ILLUSTRATION, PHOTOGRAPHY, RAYTRACED, RENDER_3D, SKETCH_BW, SKETCH_COLOR, or NONE.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "presetStyle" })
    presetStyle?: shared.SdGenerationStyle;

    @SpeakeasyMetadata()
    @Expose({ name: "prompt" })
    prompt?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "public" })
    public?: boolean;

    /**
     * The scheduler to generate images with. Defaults to EULER_DISCRETE if not specified.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "scheduler" })
    scheduler?: shared.SdGenerationSchedulers;

    /**
     * The base version of stable diffusion to use if not using a custom model. v1_5 is 1.5, v2 is 2.1, if not specified it will default to v1_5.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "sdVersion" })
    sdVersion?: shared.SdVersions;

    @SpeakeasyMetadata()
    @Expose({ name: "seed" })
    seed?: number;

    /**
     * The status of the current task.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "status" })
    status?: shared.JobStatus;
}

/**
 * Responses for GET /generations/{id}
 */
export class GetGenerationById200ApplicationJSON extends SpeakeasyBase {
    /**
     * columns and relationships of "generations"
     */
    @SpeakeasyMetadata()
    @Expose({ name: "generations_by_pk" })
    @Type(() => GetGenerationById200ApplicationJSONGenerations)
    generationsByPk?: GetGenerationById200ApplicationJSONGenerations;
}

export class GetGenerationByIdResponse extends SpeakeasyBase {
    /**
     * HTTP response content type for this operation
     */
    @SpeakeasyMetadata()
    contentType: string;

    /**
     * HTTP response status code for this operation
     */
    @SpeakeasyMetadata()
    statusCode: number;

    /**
     * Raw HTTP response; suitable for custom response parsing
     */
    @SpeakeasyMetadata()
    rawResponse?: AxiosResponse;

    /**
     * Responses for GET /generations/{id}
     */
    @SpeakeasyMetadata()
    getGenerationById200ApplicationJSONObject?: GetGenerationById200ApplicationJSON;
}
