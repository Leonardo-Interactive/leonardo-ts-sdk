/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as z from "zod";

/**
 * Type indicating whether the init image is uploaded or generated.
 */
export enum InitImageType {
    Generated = "GENERATED",
    Uploaded = "UPLOADED",
}

/**
 * Strength type for the controlnet. Can only be used for Style, Character and Content Reference controlnets.
 */
export enum StrengthType {
    Low = "Low",
    Mid = "Mid",
    High = "High",
    Ultra = "Ultra",
    Max = "Max",
}

export type ControlnetInput = {
    /**
     * The ID of the init image
     */
    initImageId?: string | undefined;
    /**
     * Type indicating whether the init image is uploaded or generated.
     */
    initImageType?: InitImageType | undefined;
    /**
     * ID of the controlnet. A list of compatible IDs can be found in our guides.
     */
    preprocessorId?: number | undefined;
    /**
     * Strength type for the controlnet. Can only be used for Style, Character and Content Reference controlnets.
     */
    strengthType?: StrengthType | null | undefined;
    /**
     * Weight for the controlnet
     */
    weight?: number | null | undefined;
};

/** @internal */
export namespace InitImageType$ {
    export const inboundSchema = z.nativeEnum(InitImageType);
    export const outboundSchema = inboundSchema;
}

/** @internal */
export namespace StrengthType$ {
    export const inboundSchema = z.nativeEnum(StrengthType);
    export const outboundSchema = inboundSchema;
}

/** @internal */
export namespace ControlnetInput$ {
    export const inboundSchema: z.ZodType<ControlnetInput, z.ZodTypeDef, unknown> = z
        .object({
            initImageId: z.string().optional(),
            initImageType: InitImageType$.inboundSchema.optional(),
            preprocessorId: z.number().optional(),
            strengthType: z.nullable(StrengthType$.inboundSchema).optional(),
            weight: z.nullable(z.number()).optional(),
        })
        .transform((v) => {
            return {
                ...(v.initImageId === undefined ? null : { initImageId: v.initImageId }),
                ...(v.initImageType === undefined ? null : { initImageType: v.initImageType }),
                ...(v.preprocessorId === undefined ? null : { preprocessorId: v.preprocessorId }),
                ...(v.strengthType === undefined ? null : { strengthType: v.strengthType }),
                ...(v.weight === undefined ? null : { weight: v.weight }),
            };
        });

    export type Outbound = {
        initImageId?: string | undefined;
        initImageType?: string | undefined;
        preprocessorId?: number | undefined;
        strengthType?: string | null | undefined;
        weight?: number | null | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, ControlnetInput> = z
        .object({
            initImageId: z.string().optional(),
            initImageType: InitImageType$.outboundSchema.optional(),
            preprocessorId: z.number().optional(),
            strengthType: z.nullable(StrengthType$.outboundSchema).optional(),
            weight: z.nullable(z.number()).optional(),
        })
        .transform((v) => {
            return {
                ...(v.initImageId === undefined ? null : { initImageId: v.initImageId }),
                ...(v.initImageType === undefined ? null : { initImageType: v.initImageType }),
                ...(v.preprocessorId === undefined ? null : { preprocessorId: v.preprocessorId }),
                ...(v.strengthType === undefined ? null : { strengthType: v.strengthType }),
                ...(v.weight === undefined ? null : { weight: v.weight }),
            };
        });
}
