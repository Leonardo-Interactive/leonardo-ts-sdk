/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import {
  GlobalPathParameterGetResponse,
  GlobalsQueryParameterGetResponse,
} from "../src/sdk/models/operations";

import { recordTest } from "./common_helpers";
import { expect, test } from "@jest/globals";

import { SDK } from "../src/sdk";

test("Test Globals Query Parameter Get Uses Global", async () => {
  recordTest("globals-query-parameter-get-uses-global");

  const sdk = new SDK({
    globalQueryParam: "test",
  });

  const res: GlobalsQueryParameterGetResponse =
    await sdk.globals.globalsQueryParameterGet();

  expect(res.statusCode).toBeDefined();
  expect(res.statusCode).toBe(200);
  expect(res.res?.args.globalQueryParam).toBe("test");
});

test("Test Globals Query Parameter Get Uses Local", async () => {
  recordTest("globals-query-parameter-get-uses-local");

  const sdk = new SDK({
    globalQueryParam: "test",
  });

  const res: GlobalsQueryParameterGetResponse =
    await sdk.globals.globalsQueryParameterGet("local");

  expect(res.statusCode).toBeDefined();
  expect(res.statusCode).toBe(200);
  expect(res.res?.args.globalQueryParam).toBe("local");
});

test("Test Globals Path Parameter Get Uses Global", async () => {
  recordTest("globals-path-parameter-get-uses-global");

  const sdk = new SDK({
    globalPathParam: 1,
  });

  const res: GlobalPathParameterGetResponse =
    await sdk.globals.globalPathParameterGet();

  expect(res.statusCode).toBeDefined();
  expect(res.statusCode).toBe(200);
  expect(res.res?.url).toBe(
    "http://localhost:35123/anything/globals/pathParameter/1",
  );
});

test("Test Globals Path Parameter Get Uses Local", async () => {
  recordTest("globals-path-parameter-get-uses-local");

  const sdk = new SDK({
    globalPathParam: 1,
  });

  const res: GlobalPathParameterGetResponse =
    await sdk.globals.globalPathParameterGet(2);

  expect(res.statusCode).toBeDefined();
  expect(res.statusCode).toBe(200);
  expect(res.res?.url).toBe(
    "http://localhost:35123/anything/globals/pathParameter/2",
  );
});
