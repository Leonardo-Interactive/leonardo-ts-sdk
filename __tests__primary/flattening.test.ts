/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { createSimpleObject } from "./helpers";

import { recordTest } from "./common_helpers";
import { expect, test } from "@jest/globals";

import { SDK } from "../src/sdk";

test("Test Component Body and Param No Conflict", async () => {
  recordTest("flattening-component-body-and-param-no-conflict");

  const s = new SDK();
  const obj = createSimpleObject();
  const res = await s.flattening.componentBodyAndParamNoConflict(
    "param test",
    obj,
  );
  expect(res.statusCode).toBe(200);
  expect(res.res).toBeDefined();
  expect(res.res!.args["paramStr"]).toEqual("param test");
  expect(res.res!.json).toEqual(obj);
});

test("Test Component Body and Param Conflict", async () => {
  recordTest("flattening-component-body-and-param-conflict");

  const s = new SDK();
  const obj = createSimpleObject();
  const res = await s.flattening.componentBodyAndParamConflict(
    obj,
    "param test",
  );
  expect(res.statusCode).toBe(200);
  expect(res.res).toBeDefined();
  expect(res.res!.args["str"]).toEqual("param test");
  expect(res.res!.json).toEqual(obj);
});

test("Test Inline Body and Param Conflict", async () => {
  recordTest("flattening-inline-body-and-param-conflict");

  const s = new SDK();
  const res = await s.flattening.inlineBodyAndParamConflict(
    {
      str: "body test",
    },
    "param test",
  );
  expect(res.statusCode).toBe(200);
  expect(res.res).toBeDefined();
  expect(res.res!.args["str"]).toEqual("param test");
  expect(res.res!.json.str).toEqual("body test");
});

test("Test Inline Body and Param No Conflict", async () => {
  recordTest("flattening-inline-body-and-param-no-conflict");

  const s = new SDK();
  const res = await s.flattening.inlineBodyAndParamNoConflict(
    {
      bodyStr: "body test",
    },
    "param test",
  );
  expect(res.statusCode).toBe(200);
  expect(res.res).toBeDefined();
  expect(res.res!.args["paramStr"]).toEqual("param test");
  expect(res.res!.json.bodyStr).toEqual("body test");
});

test("Test Conflicting Params", async () => {
  recordTest("flattening-conflicting-params");

  const s = new SDK();
  const res = await s.flattening.conflictingParams("pathParam", "queryParam");
  expect(res.statusCode).toBe(200);
  expect(res.res).toBeDefined();
  expect(res.res!.url).toContain("/pathParam?");
  expect(res.res!.args["str"]).toEqual("queryParam");
});
